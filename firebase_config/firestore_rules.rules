rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - solo el dueño puede leer/escribir sus datos
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Contacts collection - solo usuarios verificados pueden leer contactos
    match /contacts/{contactId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isVerifiedPayment == true;
      allow write: if request.auth != null && request.auth.uid == contactId;
    }
    
    // Vehicles collection
    match /vehicles/{vehicleId} {
      // Lectura pública solo si está activo
      allow read: if resource.data.status == 'active';
      // Solo el dueño puede crear/editar/eliminar
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.ownerId &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isVerifiedPayment == true;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.ownerId;
    }
    
    // Favorites collection
    match /favorites/{favoriteId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Reports collection
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
    }
    
    // Ads collection - solo lectura pública
    match /ads/{adId} {
      allow read: if true;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/appSettings/admins) &&
        request.auth.uid in get(/databases/$(database)/documents/appSettings/admins).data.adminIds;
    }
    
    // App settings - lectura pública, escritura solo admins
    match /appSettings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/appSettings/admins) &&
        request.auth.uid in get(/databases/$(database)/documents/appSettings/admins).data.adminIds;
    }
  }
}
